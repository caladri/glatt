o) Bound IPC ports, i.e. ipc_connect(my_port, ns) and then my_port can send to
   ns, and ns can reply, but no other messages may come over it.  Either that, or
   allow receive filters, so I can receive on a multiplexed port and handle
   things in an asynchronous way.

Need better locking around tasks and threads.

Octeon.

Figure out of interrupts or any other exception handling is actually functional.

Are any TLB refills being tested?

Figure out why the clock wasn't working (possibly related to previous.)

Figure out why panic from the debugger isn't working.

PCI support.

Gigabit support?

Add a reset command to db.

Add reset and halt support to Octeon.

A richer set of CIU, MIO, etc., interfaces.

Flash and CompactFlash support.

Maybe the general device/ vs. platform/ distinction should be revisited.

Tasks to do before release.

Fundamentals:
	o) Trap functionality.
	o) IPC
		o) Mailbox structure.
		o) Think more about the rights model and rights passing.
		o) More complete data model.
	o) Clean up VM, pmap and exceptions.  Add vm objects and pv lists?
		o) Worry about t_vm's validity.
		o) Support multiple page sizes.
	o) Either implement preemption or declare preemption never.
	o) Timekeeping or defer it.

Device drivers:
	o) Memory/interrupt/ioport allocation from busses.
	o) Write mu-tune for device hints, perhaps other things.
	o) Ports for device drivers.
	o) Networking
		o) Simple ethernet stack.
	o) Simple storage stack.

Ongoing / aesthetic:
	o) Go over every bit of code and comment major functions and confusing
	   sections.
	o) Start threads and PCPU stuff much earlier to make it possible to use
	   more mutexes than spinlocks, or otherwise enable using mutexes and
	   not spinlocks for a larger number of things.  It would be nice to
	   be able to move to reader/writer locks.
	o) Determine malloc vs. pool usage.  If something is only going to have
	   a small number of allocations, it should use malloc.  If something
	   cannot use a virtual address it should use a pool without VIRTUAL
	   set.  On the other hand, VIRTUAL pools no longer really exist, and
	   that may be desirable.

Current goal: December 2008 release.
