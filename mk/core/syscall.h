#ifndef	_CORE_SYSCALL_H_
#define	_CORE_SYSCALL_H_

#include <cpu/register.h>

#define	SYSCALL_BASE			(0x00)
#define	SYSCALL_THREAD_EXIT		(SYSCALL_BASE + 0x00)
#define	SYSCALL_THREAD_CREATE		(SYSCALL_BASE + 0x01)

#define	SYSCALL_IPC_BASE		(0x10)
#define	SYSCALL_IPC_PORT_ALLOCATE	(SYSCALL_IPC_BASE + 0x00)
#define	SYSCALL_IPC_PORT_SEND		(SYSCALL_IPC_BASE + 0x01)
#define	SYSCALL_IPC_PORT_WAIT		(SYSCALL_IPC_BASE + 0x02)
#define	SYSCALL_IPC_PORT_RECEIVE	(SYSCALL_IPC_BASE + 0x03)
#define	SYSCALL_IPC_TASK_PORT		(SYSCALL_IPC_BASE + 0x04)

#define	SYSCALL_VM_BASE			(0x30)
#define	SYSCALL_VM_PAGE_GET		(SYSCALL_VM_BASE + 0x00)
#define	SYSCALL_VM_PAGE_FREE		(SYSCALL_VM_BASE + 0x01)
#define	SYSCALL_VM_ALLOC		(SYSCALL_VM_BASE + 0x02)
#define	SYSCALL_VM_FREE			(SYSCALL_VM_BASE + 0x03)
#define	SYSCALL_VM_ALLOC_RANGE		(SYSCALL_VM_BASE + 0x04)

#define	SYSCALL_LAST			(SYSCALL_VM_ALLOC_RANGE)

#ifdef MK
#ifndef	ASSEMBLER
int syscall(unsigned, register_t *, register_t *);
#endif
#endif

#endif /* !_CORE_SYSCALL_H_ */
