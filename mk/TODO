Tasks to do before release.

Fundamentals:
	o) Trap functionality.
	o) Userland -- start by just copying some instructions out to userland,
	   then move into all of the ELF stuff below.
	o) IPC
		o) Mailbox structure.
		o) System call.
		o) Think more about the rights model and rights passing.
		o) More complete data model.
	o) Clean up VM, pmap and exceptions.  Add vm objects and pv lists?
	o) Either implement preemption or declare preemption never.
	o) Timekeeping or defer it.

Binaries and servers:
	o) Put a tiny, tiny VFS in front of UFS.
	o) Trivial static ELF loading from UFS for servers and such.

Device drivers:
	o) Device/bus...
		o) Simplify the device/bus system dramatically.
		o) Memory/interrupt allocation from busses.
		o) Write mu-tune for device hints, perhaps other things.
		o) Ports for device drivers.
		o) Networking
			o) Simple ethernet stack.
	o) Simple storage stack.

Ongoing / aesthetic:
	o) Start threads and PCPU stuff much earlier to make it possible to use
	   more mutexes than spinlocks, or otherwise enable using mutexes and
	   not spinlocks for a larger number of things.  It would be nice to
	   be able to move to reader/writer locks.
	o) Determine malloc vs. pool usage.  If something is only going to have
	   a small number of allocations, it should use malloc.  If something
	   cannot use a virtual address it should use a pool without VIRTUAL
	   set.  On the other hand, VIRTUAL pools no longer really exist, and
	   that may be desirable.

Bugs:
	o) The old core_test.c program with a large number of threads causes a
	   panic seemingly due to reuse of memory or exhaustion of memory, or
	   perhaps due to a write somewhere inappropriate.

Current goal: December 2008 release.
